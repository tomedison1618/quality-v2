-- PostgreSQL schema for the Quality application.
-- Run this script against an empty database to create all required tables.

CREATE TABLE IF NOT EXISTS model_numbers (
    model_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    model_type VARCHAR(255) NOT NULL,
    description TEXT,
    part_number VARCHAR(128) NOT NULL UNIQUE,
    is_active BOOLEAN DEFAULT TRUE
);

CREATE TABLE IF NOT EXISTS checklist_master_items (
    item_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    item_text TEXT NOT NULL,
    item_order INTEGER NOT NULL,
    is_active BOOLEAN DEFAULT TRUE
);

-- Seed the master checklist with default items. Ignore conflicts so the script is idempotent.
INSERT INTO checklist_master_items (item_id, item_text, item_order, is_active) VALUES
    (1, 'For new product, FAI report completed and passed', 10, TRUE),
    (2, 'Process traveler complete', 20, TRUE),
    (3, 'Datasheet complete and approved by Orbital engineer', 30, TRUE),
    (4, 'Visual check for any defects, scratches, marks', 40, TRUE),
    (5, 'Etching is complete, including correct model number and s/n', 50, TRUE),
    (6, 'Barcode label is printed with a correct s/n and placed correctly', 60, TRUE),
    (7, 'All documentation (QSG, manuals, guides) is complete and accurate', 70, TRUE),
    (8, 'All necessary accessories (power supply, cables, etc...) are accounted for', 80, TRUE),
    (9, 'Proper packaging is used to ensure no damage', 90, TRUE),
    (10, 'Shipping carrier selected based on customer needs and lowest cost', 100, TRUE),
    (11, 'Packing List complete with correct s/n & verified by QC', 110, TRUE)
ON CONFLICT (item_id) DO NOTHING;

CREATE TABLE IF NOT EXISTS shipments (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_name VARCHAR(255) NOT NULL,
    job_number VARCHAR(128) NOT NULL,
    shipping_date DATE NOT NULL,
    qc_name VARCHAR(255) NOT NULL,
    status TEXT NOT NULL DEFAULT 'In Progress' CHECK (status IN ('In Progress', 'Completed')),
    CONSTRAINT uq_shipments_job_date UNIQUE (job_number, shipping_date)
);

CREATE TABLE IF NOT EXISTS users (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR(80) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    role TEXT NOT NULL DEFAULT 'user' CHECK (role IN ('admin', 'user', 'viewer', 'QC')),
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS shipped_units (
    unit_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    shipment_id INTEGER NOT NULL REFERENCES shipments(id) ON DELETE CASCADE,
    model_type VARCHAR(255) NOT NULL,
    part_number VARCHAR(128) NOT NULL,
    serial_number VARCHAR(128) NOT NULL,
    original_serial_number VARCHAR(128),
    first_test_pass BOOLEAN DEFAULT TRUE,
    failed_equipment TEXT CHECK (failed_equipment IN ('ATE1', 'ATE2', 'ATE3', 'ATE4', 'ATE5', 'Other')),
    retest_reason TEXT,
    CONSTRAINT uq_shipped_units_serial_number UNIQUE (serial_number),
    CONSTRAINT uq_shipped_units_original_serial UNIQUE (original_serial_number),
    CONSTRAINT fk_shipped_units_part_number FOREIGN KEY (part_number) REFERENCES model_numbers(part_number) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS shipment_checklist_responses (
    response_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    shipment_id INTEGER NOT NULL REFERENCES shipments(id) ON DELETE CASCADE,
    item_id INTEGER NOT NULL REFERENCES checklist_master_items(item_id) ON DELETE CASCADE,
    status TEXT NOT NULL CHECK (status IN ('Passed', 'NA')),
    completed_by VARCHAR(255),
    completion_date DATE,
    comments TEXT,
    CONSTRAINT uq_shipment_checklist UNIQUE (shipment_id, item_id)
);

-- Ensure the identity sequence for checklist_master_items advances past the seeded data.
SELECT setval(
    pg_get_serial_sequence('checklist_master_items', 'item_id'),
    COALESCE((SELECT MAX(item_id) FROM checklist_master_items), 0),
    TRUE
);
